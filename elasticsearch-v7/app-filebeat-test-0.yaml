apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-log
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-nginx-config
data:
  filebeat.yml: |
    filebeat.inputs:
      - type: log
        paths:
          - /var/log/nginx/access.log
        fields:
          application: "nginx-access-log"
        multiline.pattern: '^[[:space:]]'
        multiline.negate: false
        multiline.match: after
      - type: log
        paths:
          - /var/log/nginx/error.log
        fields:
          application: "nginx-error-log"
        multiline.pattern: '^[[:space:]]'
        multiline.negate: false
        multiline.match: after
      - type: log
        paths:
          - /var/log/custom/error.log
        fields:
          application: "nginx-custom-error-log"
        multiline.pattern: '^[[:space:]]'
        multiline.negate: false
        multiline.match: after

    # output.elasticsearch:
    #   hosts: ["http://elasticsearch:9200"]
    #   username: "elastic" 
    #   password: "changeme"

    output.logstash:
      hosts: ["logstash.logging.svc:5044"]

    logging:
      level: info
      to_files: false
      # files:
      #   path: /var/log/filebeat
      #   name: filebeat
      #   keepfiles: 7
      #   permissions: 0644
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx
spec:
  volumes:
  - name: nginx-log
    persistentVolumeClaim:
      claimName: nginx-log
  - name: filebeat-nginx-config
    configMap:
      name: filebeat-nginx-config
  containers:
  - image: nginx
    name: nginx
    volumeMounts:
    - name: nginx-log
      mountPath: /var/log/nginx
  - name: filebeat
    image: docker.elastic.co/beats/filebeat:8.10.0
    volumeMounts:
    - name: filebeat-nginx-config
      mountPath: /usr/share/filebeat/filebeat.yml
      subPath: filebeat.yml
    - name: nginx-log
      mountPath: /var/log/nginx
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
